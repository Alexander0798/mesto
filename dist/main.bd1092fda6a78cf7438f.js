!function(){"use strict";var e={85:function(e,t,n){e.exports=n.p+"4c0dd281ed290172cc25.jpg"},388:function(e,t,n){e.exports=n.p+"ebfedd2c63f286190692.jpg"},93:function(e,t,n){e.exports=n.p+"6a454dbebac8a0c1271d.jpg"},255:function(e,t,n){e.exports=n.p+"82d18be89594d053c2a2.jpg"},736:function(e,t,n){e.exports=n.p+"c8c988e0d459c59423b7.jpg"},308:function(e,t,n){e.exports=n.p+"76df5cccb291806e252c.jpg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.m=e,n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e}(),n.b=document.baseURI||self.location.href,function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=e.url,this._headers=e.headers}var n,r;return n=t,(r=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getall",value:function(){return fetch("".concat(this._url,"users/me"),{headers:this._headers}).then((function(e){return e.json()})).then((function(e){console.log(e)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._url,"cards"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"addCard",value:function(e){var t=this;return fetch("".concat(this._url,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._url,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"setLike",value:function(e){var t=this;return fetch("".concat(this._url,"cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this._url,"cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._url,"users/me"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"editUserInfo",value:function(e){var t=this;return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return t._handleResponse(e)}))}},{key:"editAvatar",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then((function(e){return t._handleResponse(e)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n,r,o){var i=o.handleCardClick,a=o.handleDeleteClick,u=o.addLike,c=o.disLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._userId=r,this._cardId=t._id,this._cardOwnerId=t.owner._id,this._likes=t.likes,this._cardSelector=n,this._handleDeleteClick=a,this._handleCardClick=i,this._addLike=u,this._disLike=c}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this._cardSelector.content.querySelector(".card__item").cloneNode(!0)}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._image=this._element.querySelector(".card__img"),this._likeButton=this._element.querySelector(".card__button-like"),this._likesNumber=this._element.querySelector(".card__likes-number"),this._deleteButton=this._element.querySelector(".card__button-remove"),this._image.src=this._link,this._image.alt=this._name,this._element.querySelector(".card__label").textContent=this._name,this._setEventListeners(),this._hasDeleteButton(),this._isCardLiked(),this._likesNumber.textContent=this._likes.length,this._element}},{key:"_isCardLiked",value:function(){var e=this;this._likes.some((function(t){return e._userId===t._id}))&&this._likeButton.classList.add("card_like-active")}},{key:"handleLikeCard",value:function(e){this._likes=e.likes,this._likesNumber.textContent=this._likes.length,this._likeButton.classList.toggle("card_like-active")}},{key:"_hasDeleteButton",value:function(){this._userId!==this._cardOwnerId&&this._deleteButton.remove()}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(t){e._likeButton.classList.contains("card_like-active")?e._disLike(e._cardId):e._addLike(e._cardId)})),this._deleteButton.addEventListener("click",(function(){e._element.remove()})),this._image.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=t.formSelector,this._input=t.inputSelector,this._inputInvalid=t.inputErrorClass,this._submit=t.submitButtonSelector,this._inactiveButton=t.inactiveButtonClass,this._errorVisible=t.errorVisible,this._formElement=n,this._formInput=this._formElement.querySelectorAll(this._input)}var t,n;return t=e,(n=[{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"toogleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButton),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._inactiveButton),this._buttonElement.removeAttribute("disabled"))}},{key:"getErrorElement",value:function(e){return e.closest(".popup__label").querySelector(".popup__error")}},{key:"_showInputError",value:function(e,t){var n=this.getErrorElement(e);n.classList.add(this._errorVisible),n.textContent=t,e.classList.add(this._inputInvalid)}},{key:"_hideInputError",value:function(e){var t=this.getErrorElement(e);t.classList.remove(this._errorVisible),t.textContent="",e.classList.remove(this._inputInvalid)}},{key:"ressetValidForm",value:function(){var e=this;this._formInput.forEach((function(t){e._hideInputError(t)})),this.toogleButtonState()}},{key:"enableValidation",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._input)),this._buttonElement=this._formElement.querySelector(this._submit),this.toogleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e.toogleButtonState()}))}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=t}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__button-close"))&&e.close()}))}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function d(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupImg=t._popup.querySelector(".popup__img"),t._cardCaption=t._popup.querySelector(".popup__figcaption"),t}return t=a,(n=[{key:"open",value:function(e,t){f(_(a.prototype),"open",this).call(this),this._popupImg.src=t,this._popupImg.alt=e,this._cardCaption.textContent=e}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},m.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function w(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._form=n._popup.querySelector(".popup__form"),n._inputList=Array.from(n._form.querySelectorAll(".popup__input")),n._submit=t,n._submitButton=n._form.querySelector(".popup__submit"),n._submitButtonText=n._submitButton.textContent,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"close",value:function(){m(E(a.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;m(E(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submit(e._getInputValues()),e.close()}))}},{key:"loading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._submitButtonText}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._containerElement=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._containerElement.append(e)}},{key:"prependItem",value:function(e){this._containerElement.prepend(e)}},{key:"addInitialItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._about=r,this._avatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about,this._avatar.src=e.avatar}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),j=(new URL(n(85),n.b),new URL(n(388),n.b),new URL(n(93),n.b),new URL(n(255),n.b),new URL(n(736),n.b),new URL(n(308),n.b),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_inactive",inputErrorClass:"popup__input_error",errorVisible:"popup__error_visible"}),P=document.querySelector(".page"),R=P.querySelector(".profile__button-edit"),B=P.querySelector(".profile__button-add"),q=P.querySelector(".profile__button-avatar"),x=P.querySelector("#popupEditInfo"),T=P.querySelector("#popupAddCard"),A=P.querySelector("#popupImgZoom"),U=P.querySelector("#popupEditAvatar"),V=(P.querySelector("#popupDeliteCard"),P.querySelector(".profile__title")),D=P.querySelector(".profile__job"),N=P.querySelector(".profile__img"),$=document.forms.editInfo.name,J=document.forms.editInfo.about,F=document.forms.editInfo,H=document.forms.addNewCard,M=document.forms.editAvatar,z=P.querySelector(".gallery"),Z=document.querySelector("#item-temlate");function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var K,Q=new t({url:"https://nomoreparties.co/v1/cohort-41/",headers:{authorization:"886b3744-7951-454a-97ed-ee1e81c113bf","Content-Type":"application/json"}});Promise.all([Q.getInitialCards(),Q.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return G(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?G(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Y.setUserInfo(i),K=i._id,ie.addInitialItems(o)})).catch((function(e){console.log("Ошибка: ".concat(e))}));var W=function(e){var t=new o(e,Z,K,{handleCardClick:function(e,t){ae.open(e,t)},handleDeleteClick:function(e){deleteCardPopup.open(),deleteCardPopup.submitCallback((function(){Q.deleteCard(e).then((function(){deleteCardPopup.close(),t.deleteCard()})).catch((function(e){console.log("Ошибка: ".concat(e))}))}))},addLike:function(e){Q.setLike(e).then((function(e){t.handleLikeCard(e)})).catch((function(e){console.log("Ошибка: ".concat(e))}))},disLike:function(e){Q.deleteLike(e).then((function(e){t.handleLikeCard(e)})).catch((function(e){console.log("Ошибка: ".concat(e))}))}});return t.generateCard()},X=new S(x,(function(e){X.loading(!0),Q.editUserInfo(e).then((function(e){Y.setUserInfo(e),X.close()})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){X.loading(!1)}))}));X.setEventListeners();var Y=new I({name:V,about:D,avatar:N}),ee=new S(U,(function(e){ee.loading(!0),Q.editAvatar(e).then((function(e){N.src=e.avatar,ee.close()})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){ee.loading(!1)}))}));ee.setEventListeners(),q.addEventListener("click",(function(){ee.open()}));var te=new a(j,F),ne=new a(j,H),re=new a(j,M);te.enableValidation(),ne.enableValidation(),re.enableValidation();var oe=new S(T,(function(e){oe.loading(!0),Q.addCard(e).then((function(e){var t=W(e);ie.prependItem(t)})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){oe.loading(!1)}))})),ie=new L((function(e){ie.addItem(W(e))}),z),ae=new y(A);oe.setEventListeners(),ae.setEventListeners(),R.addEventListener("click",(function(){var e=Y.getUserInfo();$.value=e.name,J.value=e.about,te.toogleButtonState(),X.open()})),B.addEventListener("click",(function(){ne.toogleButtonState(),oe.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UmQsR0FBU2Msb0JBR1RqRCxFQUFrQjVFLGlCQUFpQixTQUFTLFdBQzFDLElBQU1zSSxFQUFPL0IsRUFBU0YsY0FDdEJmLEVBQWdCN0IsTUFBUTZFLEVBQUtwTCxLQUM3QnVJLEVBQWVoQyxNQUFRNkUsRUFBS2pMLE1BQzVCMEssR0FBa0IxRixvQkFDbEJtRixFQUFZUixVQU1kbkMsRUFBaUI3RSxpQkFBaUIsU0FBUyxXQUN6Q2dJLEdBQWtCM0Ysb0JBQ2xCOEYsR0FBUW5CLFUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL21lc3RvL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vbWVzdG8vd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vbWVzdG8vd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9DYXJkcy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9wb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iaiwgcHJvcCkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7IH0iLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIHRoaXMuX3VybCA9IGNvbmZpZy51cmw7XG4gICAgdGhpcy5faGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuICB9XG4gIF9oYW5kbGVSZXNwb25zZShyZXMpIHtcbiAgICBpZiAoIXJlcy5vaykge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgfVxuICBnZXRhbGwoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH11c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KS50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAgfSk7XG4gIH1cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9Y2FyZHNgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXG4gICAgfSlcbiAgICAgIC50aGVuKHJlcyA9PiB0aGlzLl9oYW5kbGVSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGFkZENhcmQoZGF0YSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9Y2FyZHNgLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgbGluazogZGF0YS5saW5rXG4gICAgICB9KVxuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9Y2FyZHMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHRoaXMuX2hhbmRsZVJlc3BvbnNlKHJlcykpO1xuICB9XG5cbiAgc2V0TGlrZShjYXJkSWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfWNhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcbiAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXG4gICAgfSlcbiAgICAgIC50aGVuKHJlcyA9PiB0aGlzLl9oYW5kbGVSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGRlbGV0ZUxpa2UoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH1jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfXVzZXJzL21lYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICBlZGl0VXNlckluZm8oZGF0YSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9dXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIGFib3V0OiBkYXRhLmFib3V0XG4gICAgICB9KVxuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICBlZGl0QXZhdGFyKGRhdGEpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXI6IGRhdGEuYXZhdGFyXG4gICAgICB9KVxuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmRzIHtcbiAgY29uc3RydWN0b3IoZGF0YSwgY2FyZFNlbGVjdG9yLCB1c2VySWQsIHsgaGFuZGxlQ2FyZENsaWNrLCBoYW5kbGVEZWxldGVDbGljaywgYWRkTGlrZSwgZGlzTGlrZSB9KSB7XG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX3VzZXJJZCA9IHVzZXJJZDtcbiAgICB0aGlzLl9jYXJkSWQgPSBkYXRhLl9pZDtcbiAgICB0aGlzLl9jYXJkT3duZXJJZCA9IGRhdGEub3duZXIuX2lkO1xuICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sgPSBoYW5kbGVEZWxldGVDbGlja1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICB0aGlzLl9hZGRMaWtlID0gYWRkTGlrZTtcbiAgICB0aGlzLl9kaXNMaWtlID0gZGlzTGlrZTtcbiAgfVxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSB0aGlzLl9jYXJkU2VsZWN0b3JcbiAgICAgIC5jb250ZW50XG4gICAgICAucXVlcnlTZWxlY3RvcignLmNhcmRfX2l0ZW0nKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHJldHVybiBjYXJkRWxlbWVudFxuICB9XG5cbiAgZGVsZXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICB9XG5cbiAgZ2VuZXJhdGVDYXJkKCkge1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9faW1nJylcbiAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fYnV0dG9uLWxpa2UnKVxuICAgIHRoaXMuX2xpa2VzTnVtYmVyID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZXMtbnVtYmVyJylcbiAgICB0aGlzLl9kZWxldGVCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19idXR0b24tcmVtb3ZlJylcblxuICAgIHRoaXMuX2ltYWdlLnNyYyA9IHRoaXMuX2xpbmtcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSB0aGlzLl9uYW1lXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGFiZWwnKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWVcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpXG4gICAgdGhpcy5faGFzRGVsZXRlQnV0dG9uKCk7XG4gICAgdGhpcy5faXNDYXJkTGlrZWQoKTtcbiAgICB0aGlzLl9saWtlc051bWJlci50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcblxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50XG4gIH1cblxuICBfaXNDYXJkTGlrZWQoKSB7XG4gICAgaWYgKHRoaXMuX2xpa2VzLnNvbWUoKHVzZXIpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLl91c2VySWQgPT09IHVzZXIuX2lkO1xuICAgIH0pKSB7XG4gICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2NhcmRfbGlrZS1hY3RpdmUnKTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVMaWtlQ2FyZChkYXRhKSB7XG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xuICAgIHRoaXMuX2xpa2VzTnVtYmVyLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnRvZ2dsZSgnY2FyZF9saWtlLWFjdGl2ZScpO1xuICB9XG5cbiAgX2hhc0RlbGV0ZUJ1dHRvbigpIHtcbiAgICBpZiAodGhpcy5fdXNlcklkICE9PSB0aGlzLl9jYXJkT3duZXJJZCkge1xuICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uLnJlbW92ZSgpO1xuICAgIH1cbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xuICAgICAgaWYgKHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKCdjYXJkX2xpa2UtYWN0aXZlJykpIHtcbiAgICAgICAgdGhpcy5fZGlzTGlrZSh0aGlzLl9jYXJkSWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fYWRkTGlrZSh0aGlzLl9jYXJkSWQpO1xuICAgICAgfVxuICAgIH0pXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKVxuICAgIH0pXG4gICAgdGhpcy5faW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluaylcbiAgICB9KVxuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9mb3JtID0gY29uZmlnLmZvcm1TZWxlY3RvcjtcclxuICAgIHRoaXMuX2lucHV0ID0gY29uZmlnLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbnB1dEludmFsaWQgPSBjb25maWcuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fc3VibWl0ID0gY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b24gPSBjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2Vycm9yVmlzaWJsZSA9IGNvbmZpZy5lcnJvclZpc2libGU7XHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gICAgdGhpcy5fZm9ybUlucHV0ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dClcclxuICB9XHJcbiAgLy8g0L3QtSDQstCw0LvQuNC00L3Ri9C5INGN0LvQtdC80LXQvdGCXHJcbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkXHJcbiAgICB9KVxyXG4gIH1cclxuICAvLyDQv9GA0L7QstC10YDQutCwINGE0L7RgNC80Ysg0L3QsCDQstCw0LvQuNC00L3QvtCy0YHRjFxyXG4gIF9pc1ZhbGlkKGZvcm1JbnB1dCkge1xyXG4gICAgaWYgKCFmb3JtSW5wdXQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoZm9ybUlucHV0LCBmb3JtSW5wdXQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoZm9ybUlucHV0KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vINC/0LXRgNC10LrQu9GO0YfQtdC90LjQtSDQutC90L7Qv9C60Lgg0YHQsNCx0LzQuNGCXHJcbiAgdG9vZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uKVxyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uKVxyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKVxyXG4gICAgfVxyXG4gIH1cclxuICAvLyDRjdC70LXQvNC10L3RgiDRgSDQvtGI0LjQsdC60L7QuVxyXG4gIGdldEVycm9yRWxlbWVudChmb3JtSW5wdXQpIHtcclxuICAgIHJldHVybiBmb3JtSW5wdXQuY2xvc2VzdCgnLnBvcHVwX19sYWJlbCcpLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZXJyb3InKTtcclxuICB9XHJcbiAgLy8g0L7RiNC40LHQutCwINCy0LjQtNC90LBcclxuICBfc2hvd0lucHV0RXJyb3IoZm9ybUlucHV0LCBlcnJvck1lc3NlZ2UpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuZ2V0RXJyb3JFbGVtZW50KGZvcm1JbnB1dClcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yVmlzaWJsZSk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NlZ2VcclxuICAgIGZvcm1JbnB1dC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0SW52YWxpZCk7XHJcbiAgfVxyXG4gIC8vINC+0YjQuNCx0LrQsCDRgdC60YDRi9GC0LBcclxuICBfaGlkZUlucHV0RXJyb3IoZm9ybUlucHV0KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLmdldEVycm9yRWxlbWVudChmb3JtSW5wdXQpXHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvclZpc2libGUpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7XHJcbiAgICBmb3JtSW5wdXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEludmFsaWQpO1xyXG4gIH1cclxuICAvLyDRgdCx0YDQvtGBINC/0L7Qu9C10Lkg0L7RiNC40LHQutC4XHJcbiAgcmVzc2V0VmFsaWRGb3JtKCkge1xyXG4gICAgdGhpcy5fZm9ybUlucHV0LmZvckVhY2goKGZvcm1FbGVtZW50KSA9PiB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGZvcm1FbGVtZW50KVxyXG4gICAgfSlcclxuICAgIHRoaXMudG9vZ2xlQnV0dG9uU3RhdGUoKVxyXG4gIH1cclxuXHJcbiAgLy8g0L/QtdGA0LXQtNCw0ZHRgiDQtNCw0L3QvdGL0LUg0LTQu9GPINC/0YDQvtCy0LXRgNC60Lgg0L3QsCDQstCw0LvQuNC00L3QvtGB0YLRjFxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXQpKTtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdCk7XHJcbiAgICB0aGlzLnRvb2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoZm9ybUlucHV0KSA9PiB7XHJcbiAgICAgIGZvcm1JbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9pc1ZhbGlkKGZvcm1JbnB1dCk7XHJcbiAgICAgICAgdGhpcy50b29nbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcG9wdXAgPSAgcG9wdXBTZWxlY3RvclxyXG4gIH1cclxuXHJcbiAgb3BlbigpIHtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX29wZW5lZCcpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2dCkgPT4geyAgIC8vINC30LDQutGA0YvRgtGMINC/0L7Qv9Cw0L8g0L3QsNC20LDRgtC40LXQvCDQvdCwIFwiRXNjYXBlXCJcclxuICAgIGlmIChldnQua2V5ID09PSAnRXNjYXBlJykge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuICBzZXRFdmVudExpc3RlbmVycygpIHsgICAvLyDRg9GB0YLQsNC90L7QstC40YLRjCDRgdC70YPRiNCw0YLQtdC70LhcclxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIChldnQpID0+IHsgIC8vINC30LDQutGA0YvRgtGMINC/0L7Qv9Cw0L/QsCDQvdCw0LbQsNGC0LjQtdC8INC90LAg0LrRgNC10YHRgtC40Log0LjQu9C4INC+0LLQtdGA0LvQtdC5XHJcbiAgICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXAnKSB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfX2J1dHRvbi1jbG9zZScpKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL3BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3RvcilcbiAgICB0aGlzLl9wb3B1cEltZyA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1nJyk7XG4gICAgdGhpcy5fY2FyZENhcHRpb24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ZpZ2NhcHRpb24nKTtcbiAgfVxuXG4gIG9wZW4obmFtZSwgbGluaykge1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgICB0aGlzLl9wb3B1cEltZy5zcmMgPSBsaW5rO1xuICAgIHRoaXMuX3BvcHVwSW1nLmFsdCA9IG5hbWU7XG4gICAgdGhpcy5fY2FyZENhcHRpb24udGV4dENvbnRlbnQgPSBuYW1lO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vcG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlU3VibWl0Rm9ybSkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5wb3B1cF9faW5wdXQnKSk7XG4gICAgdGhpcy5fc3VibWl0ID0gaGFuZGxlU3VibWl0Rm9ybVxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcignLnBvcHVwX19zdWJtaXQnKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25UZXh0ID0gdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIGNvbnN0IGRhdGEgPSB7fTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGRhdGFbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHN1cGVyLmNsb3NlKClcbiAgICB0aGlzLl9mb3JtLnJlc2V0KClcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkgeyAgIC8vINGD0YHRgtCw0L3QvtCy0LjRgtGMINGB0LvRg9GI0LDRgtC10LvQuFxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX3N1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGxvYWRpbmcoaXNMb2FkaW5nKSB7XG4gICAgaWYgKGlzTG9hZGluZykge1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Li4uJ1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9zdWJtaXRCdXR0b25UZXh0O1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yIChyZW5kZXJlciwgY29udGFpbmVyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lckVsZW1lbnQgPSBjb250YWluZXJTZWxlY3RvcjtcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lckVsZW1lbnQuYXBwZW5kKGVsZW1lbnQpO1xuICB9XG5cbiAgcHJlcGVuZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lckVsZW1lbnQucHJlcGVuZChlbGVtZW50KTtcbiAgfVxuXG4gIGFkZEluaXRpYWxJdGVtcyhkYXRhKSB7XG4gICAgZGF0YS5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3RvciAoe25hbWUsIGFib3V0LCBhdmF0YXJ9KSB7XG4gICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgdGhpcy5fYWJvdXQgPSBhYm91dDtcbiAgICB0aGlzLl9hdmF0YXIgPSBhdmF0YXI7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4ge25hbWU6IHRoaXMuX25hbWUudGV4dENvbnRlbnQsIGFib3V0OiB0aGlzLl9hYm91dC50ZXh0Q29udGVudCwgYXZhdGFyOiB0aGlzLl9hdmF0YXIuc3JjfTtcbiAgfVxuXG4gIHNldFVzZXJJbmZvKGRhdGEpIHtcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2Fib3V0LnRleHRDb250ZW50ID0gZGF0YS5hYm91dDtcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gZGF0YS5hdmF0YXI7XG4gIH1cbn1cbiIsImNvbnN0IEltYWdlQ2FyZDEgPSBuZXcgVVJMKCcuLi9pbWFnZS9nYWxsZXJ5L2l0ZW0xLmpwZycsIGltcG9ydC5tZXRhLnVybCk7XG5jb25zdCBJbWFnZUNhcmQyID0gbmV3IFVSTCgnLi4vaW1hZ2UvZ2FsbGVyeS9pdGVtMi5qcGcnLCBpbXBvcnQubWV0YS51cmwpO1xuY29uc3QgSW1hZ2VDYXJkMyA9IG5ldyBVUkwoJy4uL2ltYWdlL2dhbGxlcnkvaXRlbTMuanBnJywgaW1wb3J0Lm1ldGEudXJsKTtcbmNvbnN0IEltYWdlQ2FyZDQgPSBuZXcgVVJMKCcuLi9pbWFnZS9nYWxsZXJ5L2l0ZW00LmpwZycsIGltcG9ydC5tZXRhLnVybCk7XG5jb25zdCBJbWFnZUNhcmQ1ID0gbmV3IFVSTCgnLi4vaW1hZ2UvZ2FsbGVyeS9pdGVtNS5qcGcnLCBpbXBvcnQubWV0YS51cmwpO1xuY29uc3QgSW1hZ2VDYXJkNiA9IG5ldyBVUkwoJy4uL2ltYWdlL2dhbGxlcnkvaXRlbTYuanBnJywgaW1wb3J0Lm1ldGEudXJsKTtcblxuZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcbiAge1xuICAgIG5hbWU6ICfQm9C10YLQviwg0KHQvtC70L3QtSwg0J/QtdGB0L7QuiEnLFxuICAgIGxpbms6IEltYWdlQ2FyZDFcbiAgfSxcbiAge1xuICAgIG5hbWU6ICfQrdC70YzQsdGA0YPRgSDRjdGC0L4sINGH0YLQviDRgtC+JyxcbiAgICBsaW5rOiBJbWFnZUNhcmQyXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAn0JfQsNC60LDRgiDQktC10LvQuNC60L7Qu9C10L/QtdC9JyxcbiAgICBsaW5rOiBJbWFnZUNhcmQzXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAn0KHRg9C/0LXRgCDQl9Cw0L/RgNCw0LLQutCwJyxcbiAgICBsaW5rOiBJbWFnZUNhcmQ0XG4gIH0sXG4gIHtcbiAgICBuYW1lOiAn0J7RgtGG0LLQtdC70LgnLFxuICAgIGxpbms6IEltYWdlQ2FyZDVcbiAgfSxcbiAge1xuICAgIG5hbWU6ICfQn9C+0YfRgtC4INCj0YLQvtC90YPQu9CwJyxcbiAgICBsaW5rOiBJbWFnZUNhcmQ2XG4gIH1cbl07XG5cbi8vINC+0LHRitC10LrRgiDQtNC70Y8g0LLQsNC70LjQtNCw0YbQuNC4INGE0L7RgNC8XG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6ICcucG9wdXBfX2Zvcm0nLFxuICBpbnB1dFNlbGVjdG9yOiAnLnBvcHVwX19pbnB1dCcsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLnBvcHVwX19zdWJtaXQnLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX3N1Ym1pdF9pbmFjdGl2ZScsXG4gIGlucHV0RXJyb3JDbGFzczogJ3BvcHVwX19pbnB1dF9lcnJvcicsXG4gIGVycm9yVmlzaWJsZTogJ3BvcHVwX19lcnJvcl92aXNpYmxlJ1xufVxuXG5cblxuLy8g0LrQvtC90YLQtdC50L3QtdGAINCyINC60L7RgtC+0YDQvtC8INC70LXQttC40YIg0LLQtdGB0Ywg0LrQvtC90YLQtdC90YJcbmNvbnN0IHBhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZScpO1xuXG4vLyDQutC90L7Qv9C60Lg6INGA0LXQtNCw0LrRgtC40YDQvtCy0LDRgtGMINC/0YDQvtGE0LjQu9GMLCDQtNC+0LHQsNCy0LjRgtGMINC60LDRgNGC0L7Rh9C60YMsINGD0LTQsNC70LjRgtGMINC60LDRgNGC0L7Rh9C60YNcbmV4cG9ydCBjb25zdCBwcm9maWxlQnV0dG9uRWRpdCA9IHBhZ2UucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2J1dHRvbi1lZGl0Jyk7XG5leHBvcnQgY29uc3QgcHJvZmlsZUJ1dHRvbkFkZCA9IHBhZ2UucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2J1dHRvbi1hZGQnKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlQnV0b25FZGl0QXZhdGFyID0gcGFnZS5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYnV0dG9uLWF2YXRhcicpO1xuXG4vLyDQv9C+0L/QsNC/0YtcbmV4cG9ydCBjb25zdCBwb3B1cEVkaXRJbmZvID0gcGFnZS5xdWVyeVNlbGVjdG9yKCcjcG9wdXBFZGl0SW5mbycpO1xuZXhwb3J0IGNvbnN0IHBvcHVwQWRkQ2FyZCA9IHBhZ2UucXVlcnlTZWxlY3RvcignI3BvcHVwQWRkQ2FyZCcpO1xuZXhwb3J0IGNvbnN0IHBvcHVwT3Blblpvb20gPSBwYWdlLnF1ZXJ5U2VsZWN0b3IoJyNwb3B1cEltZ1pvb20nKTtcbmV4cG9ydCBjb25zdCBwb3B1cEVkaXRBdmF0YXIgPSBwYWdlLnF1ZXJ5U2VsZWN0b3IoJyNwb3B1cEVkaXRBdmF0YXInKTtcbmV4cG9ydCBjb25zdCBwb3B1cERlbGl0ZUNhcmQgPSBwYWdlLnF1ZXJ5U2VsZWN0b3IoJyNwb3B1cERlbGl0ZUNhcmQnKTtcblxuLy8g0Y3Qu9C10LzQtdC90YLRiyDQv9GA0L7RhNC40LvRj1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVOYW1lID0gcGFnZS5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fdGl0bGUnKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlSm9iID0gcGFnZS5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fam9iJyk7XG5leHBvcnQgY29uc3QgcHJvZmlsZUF2YXRhciA9IHBhZ2UucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2ltZycpXG5cbi8vINGN0LvQtdC80LXQvdGC0YsgZm9ybSBlZGl0XG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXROYW1lID0gZG9jdW1lbnQuZm9ybXMuZWRpdEluZm8ubmFtZVxuZXhwb3J0IGNvbnN0IHB0b2ZpbGVFZGl0Sm9iID0gZG9jdW1lbnQuZm9ybXMuZWRpdEluZm8uYWJvdXRcblxuLy8gZm9ybXNcbmV4cG9ydCBjb25zdCBmb3JtRWxlbWVudEVkaXQgPSBkb2N1bWVudC5mb3Jtcy5lZGl0SW5mb1xuZXhwb3J0IGNvbnN0IGZvcm1FbGVtZW50QWRkID0gZG9jdW1lbnQuZm9ybXMuYWRkTmV3Q2FyZFxuZXhwb3J0IGNvbnN0IGZvcm1FbGVtZW50QXZhdGFyID0gZG9jdW1lbnQuZm9ybXMuZWRpdEF2YXRhclxuXG4vLyDRjdC70LXQvNC10L3RgtGLINCz0LDQu9C70LXRgNC10Lgg0Lgg0YLQtdC80L/Qu9C10LnRgiDQutC+0L3RgtC10LnQvdC10YDQsFxuZXhwb3J0IGNvbnN0IGdhbGxlcnlDb250YWluZXIgPSBwYWdlLnF1ZXJ5U2VsZWN0b3IoJy5nYWxsZXJ5Jyk7XG5leHBvcnQgY29uc3QgdGVtbGF0ZUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNpdGVtLXRlbWxhdGUnKVxuXG5cbiIsImltcG9ydCAnLi9pbmRleC5jc3MnOyAvLyDRgdGC0LjQu9C4INC00LvRjyB3ZWJwYWNrXG5cbmltcG9ydCBBcGkgZnJvbSAnLi4vY29tcG9uZW50cy9BcGkuanMnXG5pbXBvcnQgQ2FyZHMgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkcy5qcyc7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tICcuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMnO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJztcbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mby5qcyc7XG5pbXBvcnQge1xuICBjb25maWcsXG4gIHByb2ZpbGVFZGl0TmFtZSxcbiAgcHRvZmlsZUVkaXRKb2IsXG4gIHByb2ZpbGVOYW1lLFxuICBwcm9maWxlSm9iLFxuICBwcm9maWxlQXZhdGFyLFxuICBpbml0aWFsQ2FyZHMsXG4gIHByb2ZpbGVCdXR0b25FZGl0LFxuICBwcm9maWxlQnV0dG9uQWRkLFxuICBwcm9maWxlQnV0b25FZGl0QXZhdGFyLFxuICBmb3JtRWxlbWVudEVkaXQsXG4gIGZvcm1FbGVtZW50QWRkLFxuICBmb3JtRWxlbWVudEF2YXRhcixcbiAgZ2FsbGVyeUNvbnRhaW5lcixcbiAgdGVtbGF0ZUNvbnRhaW5lcixcbiAgcG9wdXBPcGVuWm9vbSxcbiAgcG9wdXBBZGRDYXJkLFxuICBwb3B1cEVkaXRJbmZvLFxuICBwb3B1cEVkaXRBdmF0YXIsXG4gIHBvcHVwRGVsaXRlQ2FyZFxufSBmcm9tICcuLi91dGlscy9jb25zdGFudHMuanMnXG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICB1cmw6ICdodHRwczovL25vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQxLycsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiAnODg2YjM3NDQtNzk1MS00NTRhLTk3ZWQtZWUxZTgxYzExM2JmJyxcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gIH1cbn0pXG5sZXQgdXNlcklkO1xuXG4vLyDQl9Cw0LPRgNGD0LfQutCwINCz0L7RgtC+0LLRi9GFINC60LDRgNGC0L7Rh9C10Log0Lgg0LTQsNC90L3Ri9GFINC+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtSDRgSDRgdC10YDQstC10YDQsFxuUHJvbWlzZS5hbGwoW2FwaS5nZXRJbml0aWFsQ2FyZHMoKSwgYXBpLmdldFVzZXJJbmZvKCldKVxuICAudGhlbigoW2luaXRpYWxDYXJkcywgZGF0YV0pID0+IHtcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhKTtcbiAgICB1c2VySWQgPSBkYXRhLl9pZDtcbiAgICBjYXJkU2VjdGlvbi5hZGRJbml0aWFsSXRlbXMoaW5pdGlhbENhcmRzKTtcbiAgfSlcbiAgLmNhdGNoKChlcnIpID0+IHtcbiAgICBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwOiAke2Vycn1gKTtcbiAgfSk7XG5cbiAgY29uc3QgY3JlYXRlQ2FyZCA9IChkYXRhKSA9PiB7XG4gICAgY29uc3QgbmV3Q2FyZCA9IG5ldyBDYXJkcyhkYXRhLCB0ZW1sYXRlQ29udGFpbmVyLCB1c2VySWQsIHtcbiAgICAgIGhhbmRsZUNhcmRDbGljazogKG5hbWUsIGxpbmspID0+IHtcbiAgICAgICAgcG9wdXBJbWcub3BlbihuYW1lLCBsaW5rKTtcbiAgICAgIH0sIGhhbmRsZURlbGV0ZUNsaWNrOiAoY2FyZElkKSA9PiB7XG4gICAgICAgIGRlbGV0ZUNhcmRQb3B1cC5vcGVuKCk7XG4gICAgICAgIGRlbGV0ZUNhcmRQb3B1cC5zdWJtaXRDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgYXBpLmRlbGV0ZUNhcmQoY2FyZElkKVxuICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICBkZWxldGVDYXJkUG9wdXAuY2xvc2UoKTtcbiAgICAgICAgICAgICAgbmV3Q2FyZC5kZWxldGVDYXJkKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICAgIH0sIGFkZExpa2U6IChjYXJkSWQpID0+IHtcbiAgICAgICAgYXBpLnNldExpa2UoY2FyZElkKVxuICAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICBuZXdDYXJkLmhhbmRsZUxpa2VDYXJkKGRhdGEpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyfWApO1xuICAgICAgICAgIH0pO1xuICAgICAgfSwgZGlzTGlrZTogKGNhcmRJZCkgPT4ge1xuICAgICAgICBhcGkuZGVsZXRlTGlrZShjYXJkSWQpXG4gICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgICAgIG5ld0NhcmQuaGFuZGxlTGlrZUNhcmQoZGF0YSk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCk7XG4gICAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIG5ld0NhcmQuZ2VuZXJhdGVDYXJkKCk7XG4gIH1cblxuICBjb25zdCBlZGl0UHJvZmlsZSA9IG5ldyBQb3B1cFdpdGhGb3JtKHBvcHVwRWRpdEluZm8sICh1c2VyRGF0YSkgPT4ge1xuICAgIGVkaXRQcm9maWxlLmxvYWRpbmcodHJ1ZSk7XG4gICAgYXBpLmVkaXRVc2VySW5mbyh1c2VyRGF0YSlcbiAgICAgIC50aGVuKCh1c2VyRGF0YSkgPT4ge1xuICAgICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh1c2VyRGF0YSk7XG4gICAgICAgIGVkaXRQcm9maWxlLmNsb3NlKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCk7XG4gICAgICB9KVxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICBlZGl0UHJvZmlsZS5sb2FkaW5nKGZhbHNlKTtcbiAgICAgIH0pO1xuICB9KTtcbiAgZWRpdFByb2ZpbGUuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oeyBuYW1lOiBwcm9maWxlTmFtZSwgYWJvdXQ6IHByb2ZpbGVKb2IsIGF2YXRhcjogcHJvZmlsZUF2YXRhciB9KTtcblxuY29uc3QgZWRpdEF2YXRhclBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0ocG9wdXBFZGl0QXZhdGFyLCAoZGF0YSkgPT4ge1xuICBlZGl0QXZhdGFyUG9wdXAubG9hZGluZyh0cnVlKVxuICBhcGkuZWRpdEF2YXRhcihkYXRhKVxuICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICBwcm9maWxlQXZhdGFyLnNyYyA9IGRhdGEuYXZhdGFyO1xuICAgICAgZWRpdEF2YXRhclBvcHVwLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCk7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBlZGl0QXZhdGFyUG9wdXAubG9hZGluZyhmYWxzZSk7XG4gICAgfSk7XG59KVxuXG5lZGl0QXZhdGFyUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKVxuXG5wcm9maWxlQnV0b25FZGl0QXZhdGFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICBlZGl0QXZhdGFyUG9wdXAub3BlbigpO1xufSlcblxuXG5cbi8vINGB0LXQutGG0LjRjyDQtNC70Y8g0LrQsNGA0YLQvtGH0LXQulxuXG5cbi8vINC30LDQv9GD0YHQuiDQstCw0LvQuNC00LDRhtC40Y8g0YTQvtGA0LxcbmNvbnN0IHByb2ZpbGVWYWxpZGF0aW9uID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBmb3JtRWxlbWVudEVkaXQpO1xuY29uc3QgYWRkQ2FyZFZhbGlkYXRpb24gPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGZvcm1FbGVtZW50QWRkKTtcbmNvbnN0IGVkaXRBdmF0YXJWYWxpZGF0aW9uID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBmb3JtRWxlbWVudEF2YXRhcik7XG5wcm9maWxlVmFsaWRhdGlvbi5lbmFibGVWYWxpZGF0aW9uKCk7XG5hZGRDYXJkVmFsaWRhdGlvbi5lbmFibGVWYWxpZGF0aW9uKCk7XG5lZGl0QXZhdGFyVmFsaWRhdGlvbi5lbmFibGVWYWxpZGF0aW9uKCk7XG4vLyDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNC1INC40L3RhNC+0YDQvNCw0YbQuNC4INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xuXG5cblxuLy8g0YHQvtC30LTQsNC90LjQtSDQvdC+0LLQvtC5INC60LDRgNGC0L7Rh9C60LjQuSDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQvFxuY29uc3QgYWRkQ2FyZCA9IG5ldyBQb3B1cFdpdGhGb3JtKHBvcHVwQWRkQ2FyZCwgKGRhdGEpID0+IHtcbiAgYWRkQ2FyZC5sb2FkaW5nKHRydWUpXG4gIGFwaS5hZGRDYXJkKGRhdGEpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIGNvbnN0IGFkZE5ld0NhcmQgPSBjcmVhdGVDYXJkKGRhdGEpO1xuICAgICAgY2FyZFNlY3Rpb24ucHJlcGVuZEl0ZW0oYWRkTmV3Q2FyZCk7XG4gICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCk7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBhZGRDYXJkLmxvYWRpbmcoZmFsc2UpO1xuICAgIH0pO1xufSk7XG5cbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oKGRhdGEpID0+IHtcbiAgY2FyZFNlY3Rpb24uYWRkSXRlbShjcmVhdGVDYXJkKGRhdGEpKTtcbn1cbiAgLCBnYWxsZXJ5Q29udGFpbmVyKTtcblxuLy8g0YHQvtC30LTQsNC90LjQtSDQv9C+0L/QsNC/IGMg0LrQsNGA0YLQuNC90LrQvtC5XG5leHBvcnQgY29uc3QgcG9wdXBJbWcgPSBuZXcgUG9wdXBXaXRoSW1hZ2UocG9wdXBPcGVuWm9vbSk7XG4vLyDRg9GB0YLQsNC90L7QstC40YLRjCDRgdC70YPRiNCw0YLQtdC70Lgg0LTQu9GPINC/0L7Qv9Cw0L9cbmFkZENhcmQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbnBvcHVwSW1nLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vINC+0YLRgdC70LXQttC40LLQsNC90LjQtSDQutC90L7Qv9C60LggXCLRgNC10LTQsNC60YLQuNGA0L7QstCw0YLRjCDQv9GA0L7RhNC40LvRjFwiXG5wcm9maWxlQnV0dG9uRWRpdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgY29uc3QgaW5mbyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG4gIHByb2ZpbGVFZGl0TmFtZS52YWx1ZSA9IGluZm8ubmFtZTtcbiAgcHRvZmlsZUVkaXRKb2IudmFsdWUgPSBpbmZvLmFib3V0O1xuICBwcm9maWxlVmFsaWRhdGlvbi50b29nbGVCdXR0b25TdGF0ZSgpO1xuICBlZGl0UHJvZmlsZS5vcGVuKCk7XG59KTtcblxuXG4vLyDQvtGC0YHQu9C10LbQuNCy0LDQvdC40LUg0LrQvdC+0L/QutC4IFwi0LTQvtCx0LDQstC40YLRjCDQutCw0YDRgtC+0YfQutGDXCJcblxucHJvZmlsZUJ1dHRvbkFkZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgYWRkQ2FyZFZhbGlkYXRpb24udG9vZ2xlQnV0dG9uU3RhdGUoKTtcbiAgYWRkQ2FyZC5vcGVuKCk7XG59KTtcblxuIl0sIm5hbWVzIjpbIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsImciLCJnbG9iYWxUaGlzIiwidGhpcyIsIkZ1bmN0aW9uIiwiZSIsIndpbmRvdyIsIm8iLCJvYmoiLCJwcm9wIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiZG9jdW1lbnQiLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwibGVuZ3RoIiwiRXJyb3IiLCJyZXBsYWNlIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiLCJBcGkiLCJjb25maWciLCJfdXJsIiwidXJsIiwiX2hlYWRlcnMiLCJoZWFkZXJzIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImZldGNoIiwidGhlbiIsInJlc3VsdCIsImNvbnNvbGUiLCJsb2ciLCJfaGFuZGxlUmVzcG9uc2UiLCJkYXRhIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJuYW1lIiwibGluayIsImNhcmRJZCIsImFib3V0IiwiYXZhdGFyIiwiQ2FyZHMiLCJjYXJkU2VsZWN0b3IiLCJ1c2VySWQiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVEZWxldGVDbGljayIsImFkZExpa2UiLCJkaXNMaWtlIiwiX25hbWUiLCJfbGluayIsIl91c2VySWQiLCJfY2FyZElkIiwiX2lkIiwiX2NhcmRPd25lcklkIiwib3duZXIiLCJfbGlrZXMiLCJsaWtlcyIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlRGVsZXRlQ2xpY2siLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2FkZExpa2UiLCJfZGlzTGlrZSIsImNvbnRlbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2xvbmVOb2RlIiwiX2VsZW1lbnQiLCJyZW1vdmUiLCJfZ2V0VGVtcGxhdGUiLCJfaW1hZ2UiLCJfbGlrZUJ1dHRvbiIsIl9saWtlc051bWJlciIsIl9kZWxldGVCdXR0b24iLCJhbHQiLCJ0ZXh0Q29udGVudCIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9oYXNEZWxldGVCdXR0b24iLCJfaXNDYXJkTGlrZWQiLCJzb21lIiwidXNlciIsImNsYXNzTGlzdCIsImFkZCIsInRvZ2dsZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldnQiLCJjb250YWlucyIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtRWxlbWVudCIsIl9mb3JtIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0IiwiaW5wdXRTZWxlY3RvciIsIl9pbnB1dEludmFsaWQiLCJpbnB1dEVycm9yQ2xhc3MiLCJfc3VibWl0Iiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b24iLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2Vycm9yVmlzaWJsZSIsImVycm9yVmlzaWJsZSIsIl9mb3JtRWxlbWVudCIsIl9mb3JtSW5wdXQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2lucHV0TGlzdCIsImlucHV0RWxlbWVudCIsInZhbGlkaXR5IiwidmFsaWQiLCJmb3JtSW5wdXQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJfYnV0dG9uRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsImNsb3Nlc3QiLCJlcnJvck1lc3NlZ2UiLCJlcnJvckVsZW1lbnQiLCJnZXRFcnJvckVsZW1lbnQiLCJmb3JFYWNoIiwidG9vZ2xlQnV0dG9uU3RhdGUiLCJBcnJheSIsImZyb20iLCJfaXNWYWxpZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsImtleSIsImNsb3NlIiwiX3BvcHVwIiwiX2hhbmRsZUVzY0Nsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInRhcmdldCIsIlBvcHVwV2l0aEltYWdlIiwiX3BvcHVwSW1nIiwiX2NhcmRDYXB0aW9uIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZVN1Ym1pdEZvcm0iLCJfc3VibWl0QnV0dG9uIiwiX3N1Ym1pdEJ1dHRvblRleHQiLCJpbnB1dCIsInZhbHVlIiwicmVzZXQiLCJwcmV2ZW50RGVmYXVsdCIsIl9nZXRJbnB1dFZhbHVlcyIsImlzTG9hZGluZyIsIlNlY3Rpb24iLCJyZW5kZXJlciIsImNvbnRhaW5lclNlbGVjdG9yIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lckVsZW1lbnQiLCJlbGVtZW50IiwiYXBwZW5kIiwicHJlcGVuZCIsIml0ZW0iLCJVc2VySW5mbyIsIl9hYm91dCIsIl9hdmF0YXIiLCJVUkwiLCJwYWdlIiwicHJvZmlsZUJ1dHRvbkVkaXQiLCJwcm9maWxlQnV0dG9uQWRkIiwicHJvZmlsZUJ1dG9uRWRpdEF2YXRhciIsInBvcHVwRWRpdEluZm8iLCJwb3B1cEFkZENhcmQiLCJwb3B1cE9wZW5ab29tIiwicG9wdXBFZGl0QXZhdGFyIiwicHJvZmlsZU5hbWUiLCJwcm9maWxlSm9iIiwicHJvZmlsZUF2YXRhciIsInByb2ZpbGVFZGl0TmFtZSIsImZvcm1zIiwiZWRpdEluZm8iLCJwdG9maWxlRWRpdEpvYiIsImZvcm1FbGVtZW50RWRpdCIsImZvcm1FbGVtZW50QWRkIiwiYWRkTmV3Q2FyZCIsImZvcm1FbGVtZW50QXZhdGFyIiwiZWRpdEF2YXRhciIsImdhbGxlcnlDb250YWluZXIiLCJ0ZW1sYXRlQ29udGFpbmVyIiwiYXBpIiwiYXV0aG9yaXphdGlvbiIsImFsbCIsImdldEluaXRpYWxDYXJkcyIsImdldFVzZXJJbmZvIiwiaW5pdGlhbENhcmRzIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsImNhcmRTZWN0aW9uIiwiYWRkSW5pdGlhbEl0ZW1zIiwiY2F0Y2giLCJlcnIiLCJjcmVhdGVDYXJkIiwibmV3Q2FyZCIsInBvcHVwSW1nIiwib3BlbiIsImRlbGV0ZUNhcmRQb3B1cCIsInN1Ym1pdENhbGxiYWNrIiwiZGVsZXRlQ2FyZCIsInNldExpa2UiLCJoYW5kbGVMaWtlQ2FyZCIsImRlbGV0ZUxpa2UiLCJnZW5lcmF0ZUNhcmQiLCJlZGl0UHJvZmlsZSIsInVzZXJEYXRhIiwibG9hZGluZyIsImVkaXRVc2VySW5mbyIsImZpbmFsbHkiLCJzZXRFdmVudExpc3RlbmVycyIsImVkaXRBdmF0YXJQb3B1cCIsInByb2ZpbGVWYWxpZGF0aW9uIiwiYWRkQ2FyZFZhbGlkYXRpb24iLCJlZGl0QXZhdGFyVmFsaWRhdGlvbiIsImVuYWJsZVZhbGlkYXRpb24iLCJhZGRDYXJkIiwicHJlcGVuZEl0ZW0iLCJhZGRJdGVtIiwiaW5mbyJdLCJzb3VyY2VSb290IjoiIn0=