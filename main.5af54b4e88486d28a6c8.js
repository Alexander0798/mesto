!function(){"use strict";var e={85:function(e,t,n){e.exports=n.p+"4c0dd281ed290172cc25.jpg"},388:function(e,t,n){e.exports=n.p+"ebfedd2c63f286190692.jpg"},93:function(e,t,n){e.exports=n.p+"6a454dbebac8a0c1271d.jpg"},255:function(e,t,n){e.exports=n.p+"82d18be89594d053c2a2.jpg"},736:function(e,t,n){e.exports=n.p+"c8c988e0d459c59423b7.jpg"},308:function(e,t,n){e.exports=n.p+"76df5cccb291806e252c.jpg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.m=e,n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e}(),n.b=document.baseURI||self.location.href,function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=e.url,this._headers=e.headers}var n,r;return n=t,(r=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getall",value:function(){return fetch("".concat(this._url,"users/me"),{headers:this._headers}).then((function(e){return e.json()})).then((function(e){console.log(e)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._url,"cards"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"addCard",value:function(e){var t=this;return fetch("".concat(this._url,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._url,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"setLike",value:function(e){var t=this;return fetch("".concat(this._url,"cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this._url,"cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._url,"users/me"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"editUserInfo",value:function(e){var t=this;return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return t._handleResponse(e)}))}},{key:"editAvatar",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then((function(e){return t._handleResponse(e)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n,r,o){var i=o.handleCardClick,a=o.handleDeleteClick,u=o.addLike,c=o.disLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._userId=r,this._cardId=t._id,this._cardOwnerId=t.owner._id,this._likes=t.likes,this._cardSelector=n,this._handleDeleteClick=a,this._handleCardClick=i,this._addLike=u,this._disLike=c}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this._cardSelector.content.querySelector(".card__item").cloneNode(!0)}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._image=this._element.querySelector(".card__img"),this._likeButton=this._element.querySelector(".card__button-like"),this._likesNumber=this._element.querySelector(".card__likes-number"),this._deleteButton=this._element.querySelector(".card__button-remove"),this._image.src=this._link,this._image.alt=this._name,this._element.querySelector(".card__label").textContent=this._name,this._setEventListeners(),this._hasDeleteButton(),this._isCardLiked(),this._likesNumber.textContent=this._likes.length,this._setEventListeners(),this._element}},{key:"_isCardLiked",value:function(){var e=this;this._likes.some((function(t){return e._userId===t._id}))&&this._likeButton.classList.add("card_like-active")}},{key:"handleLikeCard",value:function(e){this._likes=e.likes,this._likesNumber.textContent=this._likes.length,this._likeButton.classList.toggle("card_like-active")}},{key:"_hasDeleteButton",value:function(){this._userId!==this._cardOwnerId&&this._deleteButton.remove()}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._likeButton.classList.contains("card_like-active")?e._disLike(e._cardId):e._addLike(e._cardId)})),this._deleteButton.addEventListener("click",(function(){e._element.remove()})),this._image.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=t.formSelector,this._input=t.inputSelector,this._inputInvalid=t.inputErrorClass,this._submit=t.submitButtonSelector,this._inactiveButton=t.inactiveButtonClass,this._errorVisible=t.errorVisible,this._formElement=n,this._formInput=this._formElement.querySelectorAll(this._input)}var t,n;return t=e,(n=[{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"toogleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButton),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._inactiveButton),this._buttonElement.removeAttribute("disabled"))}},{key:"getErrorElement",value:function(e){return e.closest(".popup__label").querySelector(".popup__error")}},{key:"_showInputError",value:function(e,t){var n=this.getErrorElement(e);n.classList.add(this._errorVisible),n.textContent=t,e.classList.add(this._inputInvalid)}},{key:"_hideInputError",value:function(e){var t=this.getErrorElement(e);t.classList.remove(this._errorVisible),t.textContent="",e.classList.remove(this._inputInvalid)}},{key:"ressetValidForm",value:function(){var e=this;this._formInput.forEach((function(t){e._hideInputError(t)})),this.toogleButtonState()}},{key:"enableValidation",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._input)),this._buttonElement=this._formElement.querySelector(this._submit),this.toogleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e.toogleButtonState()}))}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=t}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__button-close"))&&e.close()}))}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function d(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupImg=t._popup.querySelector(".popup__img"),t._cardCaption=t._popup.querySelector(".popup__figcaption"),t}return t=a,(n=[{key:"open",value:function(e,t){f(_(a.prototype),"open",this).call(this),this._popupImg.src=t,this._popupImg.alt=e,this._cardCaption.textContent=e}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},m.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function w(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._form=n._popup.querySelector(".popup__form"),n._inputList=Array.from(n._form.querySelectorAll(".popup__input")),n._submit=t,n._submitButton=n._form.querySelector(".popup__submit"),n._submitButtonText=n._submitButton.textContent,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"close",value:function(){m(E(a.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;m(E(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submit(e._getInputValues()),e.close()}))}},{key:"loading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._submitButtonText}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._containerElement=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._containerElement.append(e)}},{key:"prependItem",value:function(e){this._containerElement.prepend(e)}},{key:"addInitialItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._about=r,this._avatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about,this._avatar.src=e.avatar}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),j=(new URL(n(85),n.b),new URL(n(388),n.b),new URL(n(93),n.b),new URL(n(255),n.b),new URL(n(736),n.b),new URL(n(308),n.b),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_inactive",inputErrorClass:"popup__input_error",errorVisible:"popup__error_visible"}),P=document.querySelector(".page"),R=P.querySelector(".profile__button-edit"),B=P.querySelector(".profile__button-add"),q=P.querySelector(".profile__button-avatar"),x=P.querySelector("#popupEditInfo"),T=P.querySelector("#popupAddCard"),A=P.querySelector("#popupImgZoom"),U=P.querySelector("#popupEditAvatar"),V=(P.querySelector("#popupDeliteCard"),P.querySelector(".profile__title")),D=P.querySelector(".profile__job"),N=P.querySelector(".profile__img"),$=document.forms.editInfo.name,J=document.forms.editInfo.about,F=document.forms.editInfo,H=document.forms.addNewCard,M=document.forms.editAvatar,z=P.querySelector(".gallery"),Z=document.querySelector("#item-temlate");function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var K,Q=new t({url:"https://nomoreparties.co/v1/cohort-41/",headers:{authorization:"886b3744-7951-454a-97ed-ee1e81c113bf","Content-Type":"application/json"}});Promise.all([Q.getInitialCards(),Q.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return G(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?G(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];W.setUserInfo(i),K=i._id,ie.addInitialItems(o)})).catch((function(e){console.log("Ошибка: ".concat(e))}));var W=new I({name:V,about:D,avatar:N}),X=new S(x,(function(e){X.loading(!0),Q.editUserInfo(e).then((function(e){W.setUserInfo(e),X.close()})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){X.loading(!1)}))}));X.setEventListeners();var Y=new S(U,(function(e){Y.loading(!0),Q.editAvatar(e).then((function(e){N.src=e.avatar,Y.close()})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){Y.loading(!1)}))}));Y.setEventListeners(),q.addEventListener("click",(function(){Y.open()}));var ee=function(e){var t=new o(e,Z,K,{handleCardClick:function(e,t){ae.open(e,t)},handleDeleteClick:function(e){deleteCardPopup.open(),deleteCardPopup.submitCallback((function(){Q.deleteCard(e).then((function(){deleteCardPopup.close(),t.deleteCard()})).catch((function(e){console.log("Ошибка: ".concat(e))}))}))},addLike:function(e){Q.setLike(e).then((function(e){t.handleLikeCard(e)})).catch((function(e){console.log("Ошибка: ".concat(e))}))},disLike:function(e){Q.deleteLike(e).then((function(e){t.handleLikeCard(e)})).catch((function(e){console.log("Ошибка: ".concat(e))}))}});return t.generateCard()},te=new a(j,F),ne=new a(j,H),re=new a(j,M);te.enableValidation(),ne.enableValidation(),re.enableValidation();var oe=new S(T,(function(e){oe.loading(!0),Q.addCard(e).then((function(e){var t=ee(e);ie.prependItem(t)})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){oe.loading(!1)}))})),ie=new L((function(e){ie.addItem(ee(e))}),z),ae=new y(A);oe.setEventListeners(),ae.setEventListeners(),R.addEventListener("click",(function(){var e=W.getUserInfo();$.value=e.name,J.value=e.about,te.toogleButtonState(),X.open()})),B.addEventListener("click",(function(){ne.toogleButtonState(),oe.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,